[
  {
    "item": "http://www.wikidata.org/entity/Q1060131",
    "itemLabel": "Challenge-Handshake Authentication Protocol",
    "itemDescription": "authentication protocol for the point-to-point protocol",
    "link": "https://en.wikipedia.org/wiki/Challenge-Handshake_Authentication_Protocol",
    "text": "In computing, the Challenge-Handshake Authentication Protocol (CHAP) authenticates a user or network host to an authenticating entity. That entity may be, for example, an Internet service provider. CHAP is specified in RFC 1994.\nCHAP provides protection against replay attacks by the peer through the use of an incrementally changing identifier and of a variable challenge-value. CHAP requires that both the client and server know the plaintext of the secret, although it is never sent over the network.  Thus, CHAP provides better security as compared to Password Authentication Protocol (PAP) which is vulnerable for both these reasons. The MS-CHAP variant does not require either peer to know the plaintext and does not transmit it, but has been broken.\n\n",
    "aliases": [
      "CHAP",
      "Challenge Handshake Authentication Protocol"
    ],
    "superClasses": [
      "challenge\u2013response authentication"
    ],
    "types": [
      "authentication protocol"
    ]
  },
  {
    "item": "http://www.wikidata.org/entity/Q1109589",
    "itemLabel": "strong authentication",
    "link": "https://en.wikipedia.org/wiki/Strong_authentication",
    "text": "Strong authentication is a notion with several unofficial definitions. However, since January 2013, it has been defined by regulation and incoming legislation within the European Union and the SEPA payment zone for remote payment transactions. Strong authentication and strong customer authentication are used interchangeably in banking and financial services, particularly where access to an account must be linked to an actual person, corporation or trust. It is typically considered to require at least two forms of verification, selected from secrets a user knows, devices or tokens a user owns, and biometric information connected to what/who a user is.",
    "aliases": [
      "Strong authentication"
    ],
    "superClasses": [
      "authentication protocol"
    ],
    "types": []
  },
  {
    "item": "http://www.wikidata.org/entity/Q1146165",
    "itemLabel": "Extensible Authentication Protocol",
    "itemDescription": "authentication protocol for the point-to-point protocol",
    "link": "https://en.wikipedia.org/wiki/Extensible_Authentication_Protocol",
    "text": "Extensible Authentication Protocol (EAP) is an authentication framework frequently used in wireless networks and point-to-point connections. It is defined in RFC 3748, which made RFC 2284 obsolete, and is updated by RFC 5247.\nEAP is an authentication framework for providing the transport and usage of keying material and parameters generated by EAP methods. There are many methods defined by RFCs and a number of vendor specific methods and new proposals exist. EAP is not a wire protocol; instead it only defines message formats. Each protocol that uses EAP defines a way to encapsulate EAP messages within that protocol's messages.\nEAP is in wide use. For example, in IEEE 802.11 (WiFi) the WPA and WPA2 standards have adopted IEEE 802.1X with one hundred EAP Types as the official authentication mechanisms.",
    "aliases": [
      "PPP Extensible Authentication Protocol",
      "EAP"
    ],
    "superClasses": [],
    "types": [
      "authentication protocol"
    ]
  },
  {
    "item": "http://www.wikidata.org/entity/Q1208648",
    "itemLabel": "Diameter",
    "itemDescription": "computer network protocol",
    "link": "https://en.wikipedia.org/wiki/Diameter_(protocol)",
    "text": "Diameter is an authentication, authorization, and accounting protocol for computer networks. It evolved from the earlier RADIUS protocol. It belongs to the application layer protocols in the internet protocol suite.\nDiameter Applications extend the base protocol by adding new commands and/or attributes, such as those for use with the Extensible Authentication Protocol (EAP).",
    "aliases": [],
    "superClasses": [
      "AAA protocol"
    ],
    "types": [
      "computer network protocol",
      "authentication protocol"
    ]
  },
  {
    "item": "http://www.wikidata.org/entity/Q1541964",
    "itemLabel": "Host Identity Protocol",
    "itemDescription": "Internet protocol",
    "link": "https://en.wikipedia.org/wiki/Host_Identity_Protocol",
    "text": "The Host Identity Protocol (HIP) is a host identification technology for use on Internet Protocol (IP) networks, such as the Internet. The Internet has two main name spaces, IP addresses and the Domain Name System. HIP separates the end-point identifier and locator roles of IP addresses. It introduces a Host Identity (HI) name space, based on a public key security infrastructure.\nThe Host Identity Protocol provides secure methods for IP multihoming and mobile computing.\nIn networks that implement the Host Identity Protocol, all occurrences of IP addresses in applications are eliminated and replaced with cryptographic host identifiers. The cryptographic keys are typically, but not necessarily, self-generated.\nThe effect of eliminating IP addresses in application and transport layers is a decoupling of the transport layer from the internetworking layer (Internet Layer) in TCP/IP.HIP was specified in the IETF HIP working group. An Internet Research Task Force (IRTF) HIP research group looks at the broader impacts of HIP.\nThe working group is chartered to produce Requests for Comments on the \"Experimental\" track, but it is understood that their quality and security properties should match the standards track requirements. The main purpose for producing Experimental documents instead of standards track ones are the unknown effects that the mechanisms may have on applications and on the Internet in the large.",
    "aliases": [
      "HIP"
    ],
    "superClasses": [],
    "types": [
      "computer network protocol",
      "authentication protocol"
    ]
  },
  {
    "item": "http://www.wikidata.org/entity/Q1678488",
    "itemLabel": "TACACS",
    "itemDescription": "computer network protocol",
    "link": "https://en.wikipedia.org/wiki/TACACS",
    "text": "Terminal Access Controller Access-Control System (TACACS, usually pronounced like tack-axe) refers to a family of related protocols handling remote authentication and related services for networked access control through a centralized server. The original TACACS protocol, which dates back to 1984, was used for communicating with an authentication server, common in older UNIX networks; it spawned related protocols:\n\nExtended TACACS (XTACACS) is a proprietary extension to TACACS introduced by Cisco Systems in 1990 without backwards compatibility to the original protocol. TACACS and XTACACS both allow a remote access server to communicate with an authentication server in order to determine if the user has access to the network.\nTerminal Access Controller Access-Control System Plus (TACACS+) is a protocol developed by Cisco and released as an open standard beginning in 1993. Although derived from TACACS, TACACS+ is a separate protocol that handles authentication, authorization, and accounting (AAA) services. TACACS+ and other flexible AAA protocols have largely replaced their predecessors.",
    "aliases": [],
    "superClasses": [
      "AAA protocol"
    ],
    "types": [
      "computer network protocol",
      "authentication protocol"
    ]
  },
  {
    "item": "http://www.wikidata.org/entity/Q17084669",
    "itemLabel": "Software token",
    "link": "https://en.wikipedia.org/wiki/Software_token",
    "text": "A software token (a.k.a. soft token) is a type of two-factor authentication security device that may be used to authorize the use of computer services. Software tokens are stored on a general-purpose electronic device such as a desktop computer, laptop, PDA, or mobile phone and can be duplicated. (Contrast hardware tokens, where the credentials are stored on a dedicated hardware device and therefore cannot be duplicated (absent physical invasion of the device).)\nBecause software tokens are something one does not physically possess, they are exposed to unique threats based on duplication of the underlying cryptographic material - for example, computer viruses and software attacks. Both hardware and software tokens are vulnerable to bot-based man-in-the-middle attacks, or to simple phishing attacks in which the one-time password provided by the token is solicited, and then supplied to the genuine website in a timely manner.  Software tokens do have benefits: there is no physical token to carry, they do not contain batteries that will run out, and they are cheaper than hardware tokens.",
    "aliases": [],
    "superClasses": [],
    "types": [
      "multi-factor authentication"
    ]
  },
  {
    "item": "http://www.wikidata.org/entity/Q17086335",
    "itemLabel": "two-factor authentication",
    "aliases": [
      "2FA"
    ],
    "superClasses": [
      "two-step verification",
      "multi-factor authentication"
    ],
    "types": []
  },
  {
    "item": "http://www.wikidata.org/entity/Q244371",
    "itemLabel": "OpenID",
    "itemDescription": "open authentication standard",
    "link": "https://en.wikipedia.org/wiki/OpenID",
    "text": "OpenID is an open standard and decentralized authentication protocol.\nPromoted by the non-profit OpenID Foundation, it allows users to be authenticated by co-operating sites (known as relying parties, or RP) using a third-party service, eliminating the need for webmasters to provide their own ad hoc login systems, and allowing users to log into multiple unrelated websites without having to have a separate identity and password for each.Users create accounts by selecting an OpenID identity provider, and then use those accounts to sign onto any website that accepts OpenID authentication. Several large organizations either issue or accept OpenIDs on their websites according to the OpenID Foundation.The OpenID standard provides a framework for the communication that must take place between the identity provider and the OpenID acceptor (the \"relying party\"). An extension to the standard (the OpenID Attribute Exchange) facilitates the transfer of user attributes, such as name and gender, from the OpenID identity provider to the relying party (each relying party may request a different set of attributes, depending on its requirements).The OpenID protocol does not rely on a central authority to authenticate a user's identity. Moreover, neither services nor the OpenID standard may mandate a specific means by which to authenticate users, allowing for approaches ranging from the common (such as passwords) to the novel (such as smart cards or biometrics).\nThe term OpenID may also refer to an identifier as specified in the OpenID standard; these identifiers take the form of a unique Uniform Resource Identifier (URI), and are managed by some \"OpenID provider\" that handles authentication.The current version of OpenID is OpenID Connect 1.0, finalized and published in February 2014, and updated with corrections in November 2014.",
    "aliases": [],
    "superClasses": [],
    "types": [
      "technical standard",
      "authentication protocol"
    ]
  },
  {
    "item": "http://www.wikidata.org/entity/Q24883063",
    "itemLabel": "FreeOTP",
    "link": "https://en.wikipedia.org/wiki/FreeOTP",
    "text": "FreeOTP is a soft token authenticator that can be used for two-factor authentication. It provides implementations of HOTP and TOTP. Tokens can be added by scanning a QR code or by manually entering in the token configuration. FreeOTP can be used as a replacement for Google Authenticator even when logging into Google services. It is maintained by Red Hat under the Apache 2.0 license. It is available for Android and iOS.",
    "aliases": [],
    "superClasses": [],
    "types": [
      "two-factor authentication",
      "free software"
    ]
  },
  {
    "item": "http://www.wikidata.org/entity/Q25384783",
    "itemLabel": "Q25384783",
    "aliases": [],
    "superClasses": [],
    "types": [
      "public service",
      "authentication protocol"
    ]
  },
  {
    "item": "http://www.wikidata.org/entity/Q3924285",
    "itemLabel": "Woo\u2013Lam",
    "link": "https://en.wikipedia.org/wiki/Woo%E2%80%93Lam",
    "text": "",
    "aliases": [],
    "superClasses": [],
    "types": [
      "authentication protocol"
    ]
  },
  {
    "item": "http://www.wikidata.org/entity/Q430140",
    "itemLabel": "AAA protocol",
    "itemDescription": "family of protocols which mediate network access",
    "link": "https://en.wikipedia.org/wiki/AAA_(computer_security)",
    "text": "AAA refers to Authentication, Authorization and Accounting. It is used to refer to a family of protocols that mediate network access.\nTwo network protocols providing this functionality are particularly popular: the RADIUS protocol, and its newer Diameter counterpart.Further explanations of Authentication, Authorization, and Accounting are available on external sites.",
    "aliases": [
      "Authentication",
      "Authorization and Accounting protocol"
    ],
    "superClasses": [
      "authentication protocol"
    ],
    "types": []
  },
  {
    "item": "http://www.wikidata.org/entity/Q444574",
    "itemLabel": "CRAM-MD5",
    "link": "https://en.wikipedia.org/wiki/CRAM-MD5",
    "text": "In cryptography, CRAM-MD5 is a challenge-response authentication mechanism (CRAM) based on the HMAC-MD5 algorithm. As one of the mechanisms supported by the Simple Authentication and Security Layer (SASL), it is often used in email software as part of SMTP Authentication and for the authentication of POP and IMAP users, as well as in applications implementing LDAP, XMPP, BEEP, and other protocols.\nWhen such software requires authentication over unencrypted connections, CRAM-MD5 is preferred over mechanisms that transmit passwords \"in the clear,\" such as LOGIN and PLAIN. However, it can't prevent derivation of a password through a brute-force attack, so it is less effective than alternative mechanisms that avoid passwords or that use connections encrypted with Transport Layer Security (TLS).",
    "aliases": [],
    "superClasses": [],
    "types": [
      "authentication protocol"
    ]
  },
  {
    "item": "http://www.wikidata.org/entity/Q4652161",
    "itemLabel": "AKA",
    "link": "https://en.wikipedia.org/wiki/Authentication_and_Key_Agreement",
    "text": "Authentication and Key Agreement (AKA) is a security protocol used in 3G networks. AKA is also used for one-time password generation mechanism for digest access authentication. AKA is a challenge-response based mechanism that uses symmetric cryptography.",
    "aliases": [],
    "superClasses": [],
    "types": [
      "authentication protocol"
    ]
  },
  {
    "item": "http://www.wikidata.org/entity/Q5008914",
    "itemLabel": "CAVE-based authentication",
    "link": "https://en.wikipedia.org/wiki/CAVE-based_authentication",
    "text": "CAVE-based Authentication (a.k.a. HLR Authentication, 2G Authentication, Access Authentication) is an access authentication protocol used in CDMA/1xRTT computer network systems.",
    "aliases": [],
    "superClasses": [],
    "types": [
      "authentication protocol"
    ]
  },
  {
    "item": "http://www.wikidata.org/entity/Q506053",
    "itemLabel": "Kerberos",
    "itemDescription": "computer network protocol",
    "link": "https://en.wikipedia.org/wiki/Kerberos_(protocol)",
    "text": "Kerberos () is a computer network authentication protocol that works on the basis of tickets to allow nodes communicating over a non-secure network to prove their identity to one another in a secure manner. The protocol was named after the character Kerberos (or Cerberus) from Greek mythology, the ferocious three-headed guard dog of Hades. Its designers aimed it primarily at a client\u2013server model and it provides mutual authentication\u2014both the user and the server verify each other's identity. Kerberos protocol messages are protected against eavesdropping and replay attacks.\nKerberos builds on symmetric key cryptography and requires a trusted third party, and optionally may use public-key cryptography during certain phases of authentication. Kerberos uses UDP port 88 by default.",
    "aliases": [],
    "superClasses": [],
    "types": [
      "computer network protocol",
      "authentication protocol"
    ]
  },
  {
    "item": "http://www.wikidata.org/entity/Q576988",
    "itemLabel": "Secure Remote Password protocol",
    "itemDescription": "cryptographic protocol for identification",
    "link": "https://en.wikipedia.org/wiki/Secure_Remote_Password_protocol",
    "text": "The Secure Remote Password protocol (SRP) is an augmented password-authenticated key agreement (PAKE) protocol, specifically designed to work around existing patents.Like all PAKE protocols, an eavesdropper or man in the middle cannot obtain enough information to be able to brute force guess a password without further interactions with the parties for each guess. This means that strong security can be obtained using weak passwords. Furthermore, being an augmented PAKE protocol, the server does not store password-equivalent data. This means that an attacker who steals the server data cannot masquerade as the client unless they first perform a brute force search for the password.\nIn layman's terms, during SRP (or any other PAKE protocol) authentication, one party (the \"client\" or \"user\") demonstrates to another party (the \"server\") that they know the password, without sending the password itself nor any other information from which the password can be broken. The password never leaves the client and is unknown to the server.",
    "aliases": [
      "SRP"
    ],
    "superClasses": [],
    "types": [
      "authentication protocol"
    ]
  },
  {
    "item": "http://www.wikidata.org/entity/Q7251933",
    "itemLabel": "Protocol for Carrying Authentication for Network Access",
    "itemDescription": "IP-based protocol that allows a device to authenticate itself with a network to be granted access",
    "link": "https://en.wikipedia.org/wiki/Protocol_for_Carrying_Authentication_for_Network_Access",
    "text": "PANA (Protocol for Carrying Authentication for Network Access) is an IP-based protocol that allows a device to authenticate itself with a network to be granted access. PANA will not define any new authentication protocol, key distribution, key agreement or key derivation protocols. For these purposes, the Extensible Authentication Protocol (EAP) will be used, and PANA will carry the EAP payload. PANA allows dynamic service provider selection, supports various authentication methods, is suitable for roaming users, and is independent from the link layer mechanisms.\nPANA is an Internet Engineering Task Force (IETF) protocol and described in RFC 5191.",
    "aliases": [
      "PANA"
    ],
    "superClasses": [],
    "types": [
      "authentication protocol"
    ]
  },
  {
    "item": "http://www.wikidata.org/entity/Q734865",
    "itemLabel": "NTLM",
    "link": "https://en.wikipedia.org/wiki/NT_LAN_Manager",
    "text": "In a Windows network, NT (New Technology) LAN Manager (NTLM) is a suite of Microsoft security protocols that provides authentication, integrity, and confidentiality to users. NTLM is the successor to the authentication protocol in Microsoft LAN Manager (LANMAN), an older Microsoft product. The NTLM protocol suite is implemented in a Security Support Provider, which combines the LAN Manager authentication protocol, NTLMv1, NTLMv2 and NTLM2 Session protocols in a single package. Whether these protocols are used or can be used on a system is governed by Group Policy settings, for which different versions of Windows have different default settings.  NTLM passwords are considered weak because they can be brute-forced very easily with modern hardware.",
    "aliases": [
      "NT LAN Manager"
    ],
    "superClasses": [],
    "types": [
      "authentication protocol"
    ]
  },
  {
    "item": "http://www.wikidata.org/entity/Q743238",
    "itemLabel": "OAuth",
    "itemDescription": "open standard for authorization",
    "link": "https://en.wikipedia.org/wiki/OAuth",
    "text": "OAuth is an open standard for access delegation, commonly used as a way for Internet users to grant websites or applications access to their information on other websites but without giving them the passwords. This mechanism is used by companies such as Amazon, Google, Facebook, Microsoft and Twitter to permit the users to share information about their accounts with third party applications or websites.\nGenerally, OAuth provides to clients a \"secure delegated access\" to server resources on behalf of a resource owner. It specifies a process for resource owners to authorize third-party access to their server resources without sharing their credentials. Designed specifically to work with Hypertext Transfer Protocol (HTTP), OAuth essentially allows access tokens to be issued to third-party clients by an authorization server, with the approval of the resource owner. The third party then uses the access token to access the protected resources hosted by the resource server.OAuth is a service that is complementary to and distinct from OpenID. OAuth is also distinct from OATH, which is a reference architecture for authentication, not a standard for authorization. However, OAuth is directly related to OpenID Connect (OIDC) since OIDC is an authentication layer built on top of OAuth 2.0. OAuth is also distinct from XACML, which is an authorization policy standard. OAuth can be used in conjunction with XACML where OAuth is used for ownership consent and access delegation whereas XACML is used to define the authorization policies (e.g. managers can view documents in their region).",
    "aliases": [],
    "superClasses": [],
    "types": [
      "open standard",
      "authentication protocol"
    ]
  },
  {
    "item": "http://www.wikidata.org/entity/Q747499",
    "itemLabel": "RADIUS",
    "itemDescription": "computer network protocol",
    "link": "https://en.wikipedia.org/wiki/RADIUS",
    "text": "Remote Authentication Dial-In User Service (RADIUS) is a networking protocol, operating on port 1812 that provides centralized Authentication, Authorization, and Accounting (AAA or Triple A) management for users who connect and use a network service.  RADIUS was developed by Livingston Enterprises, Inc. in 1991 as an access server authentication and accounting protocol and later brought into the Internet Engineering Task Force (IETF) standards.Because of the broad support and the ubiquitous nature of the RADIUS protocol, it is often used by Internet service providers (ISPs) and enterprises to manage access to the Internet or internal networks, wireless networks, and integrated e-mail services.  These networks may incorporate modems, digital subscriber line (DSL), access points, virtual private networks (VPNs), network ports, web servers, etc.RADIUS is a client/server protocol that runs in the application layer, and can use either TCP or UDP as transport. Network access servers, the gateways that control access to a network, usually contain a RADIUS client component that communicates with the RADIUS server. RADIUS is often the back-end of choice for 802.1X authentication as well.The RADIUS server is usually a background process running on a UNIX or Microsoft Windows server.",
    "aliases": [],
    "superClasses": [
      "AAA protocol"
    ],
    "types": [
      "computer network protocol",
      "authentication protocol"
    ]
  },
  {
    "item": "http://www.wikidata.org/entity/Q7878662",
    "itemLabel": "multi-factor authentication",
    "itemDescription": "method of computer access control",
    "link": "https://en.wikipedia.org/wiki/Multi-factor_authentication",
    "text": "Multi-factor authentication (MFA) is an authentication method in which a computer user is granted access only after successfully presenting two or more pieces of evidence (or factors) to an authentication mechanism: knowledge (something the user and only the user knows), possession (something the user and only the user has), and inherence (something the user and only the user is).Two-factor authentication (also known as 2FA) is a type, or subset, of multi-factor authentication. It is a method of confirming users' claimed identities by using a combination of two different factors: 1) something they know, 2) something they have, or 3) something they are.\nA good example of two-factor authentication is the withdrawing of money from an ATM; only the correct combination of a bank card (something the user possesses) and a PIN (something the user knows) allows the transaction to be carried out.\nTwo other examples are to supplement a user-controlled password with a one-time password (OTP) or code generated or received by a device (e.g. a security token or smartphone) that only the user possesses.Two-step verification or two-step authentication is a method of confirming a user's claimed identity by utilizing something they know (password) and a second factor other than something they have or something they are. An example of a second step is the user repeating back something that was sent to them through an out-of-band mechanism. Or, the second step might be a six digit number generated by an app that is common to the user and the authentication system.",
    "aliases": [
      "2 Factor Authenticaton",
      "2 factor authentication",
      "2FA",
      "Three Factor Authentication",
      "Multifactor authentication"
    ],
    "superClasses": [
      "authentication protocol"
    ],
    "types": []
  },
  {
    "item": "http://www.wikidata.org/entity/Q888073",
    "itemLabel": "LAN Manager",
    "link": "https://en.wikipedia.org/wiki/LAN_Manager",
    "text": "LAN Manager was a Network operating system (NOS) available from multiple vendors and developed by Microsoft in cooperation with 3Com Corporation.  It was designed to succeed 3Com's 3+Share network server software which ran atop a heavily modified version of MS-DOS.",
    "aliases": [],
    "superClasses": [],
    "types": [
      "network operating system",
      "authentication protocol"
    ]
  },
  {
    "item": "http://www.wikidata.org/entity/Q959710",
    "itemLabel": "Password Authentication Protocol",
    "link": "https://en.wikipedia.org/wiki/Password_Authentication_Protocol",
    "text": "Password Authentication Protocol (PAP) is a password-based authentication protocol used by Point to Point Protocol (PPP) to validate users.  Almost all network operating system remote servers support PAP. PAP is specified in RFC 1334.\nPAP is considered a weak authentication scheme (weak schemes are simple and have lighter computational overhead but are much more vulnerable to attack; while weak schemes may have limited application in some constrained environments, they are avoided in general). Among PAP's deficiencies is the fact that it transmits unencrypted passwords over the network. PAP is therefore used only as a last resort when the remote server does not support a stronger scheme such as CHAP or EAP.",
    "aliases": [
      "PAP"
    ],
    "superClasses": [],
    "types": [
      "authentication protocol"
    ]
  },
  {
    "item": "http://www.wikidata.org/entity/Q981514",
    "itemLabel": "SecurID",
    "itemDescription": "mechanism for performing two-factor authentication for a user to a network resource",
    "link": "https://en.wikipedia.org/wiki/RSA_SecurID",
    "text": "RSA SecurID, formerly referred to as SecurID, is a mechanism developed by Security Dynamics (later RSA Security and now RSA, The Security Division of EMC) for performing two-factor authentication for a user to a network resource.",
    "aliases": [
      "RSA SecurID"
    ],
    "superClasses": [
      "two-factor authentication"
    ],
    "types": []
  }
]